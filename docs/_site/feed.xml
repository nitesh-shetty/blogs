<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-09-07T11:32:09+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Nitesh Shetty Blogs</title><subtitle></subtitle><entry><title type="html">Creating a blog using github</title><link href="http://localhost:4000/jekyll/update/2025/09/06/creating-github-pages.html" rel="alternate" type="text/html" title="Creating a blog using github" /><published>2025-09-06T20:58:43+05:30</published><updated>2025-09-06T20:58:43+05:30</updated><id>http://localhost:4000/jekyll/update/2025/09/06/creating-github-pages</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2025/09/06/creating-github-pages.html"><![CDATA[Although lot of guides are available online, this might fastern things for newbies who want to start the blog.  
Though not sophesticated, but should be a good starting point.  
Initally create a repo were you plan to host the pages.  
In my case I created a repo by name blog, and plan is to put the blogs in docs folder.  
git clone j
Then I installed jeky
ll using, apt install jekyll -y  
create a new project using, jekyll new docs


You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

Jekyll requires blog post files to be named according to the following format:

`YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Although lot of guides are available online, this might fastern things for newbies who want to start the blog. Though not sophesticated, but should be a good starting point. Initally create a repo were you plan to host the pages. In my case I created a repo by name blog, and plan is to put the blogs in docs folder. git clone j Then I installed jeky ll using, apt install jekyll -y create a new project using, jekyll new docs]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2025/09/06/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2025-09-06T20:58:43+05:30</published><updated>2025-09-06T20:58:43+05:30</updated><id>http://localhost:4000/jekyll/update/2025/09/06/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2025/09/06/welcome-to-jekyll.html"><![CDATA[You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

Jekyll requires blog post files to be named according to the following format:

`YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>